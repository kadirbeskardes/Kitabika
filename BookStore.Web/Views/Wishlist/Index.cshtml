@model IEnumerable<BookStore.Service.DTOs.WishlistDto>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["MyWishlist"];
    var stats = ViewBag.Stats as BookStore.Service.DTOs.WishlistStatsDto;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="bi bi-heart"></i> @Localizer["MyWishlist"]</h2>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">@Localizer["Home"]</a></li>
                        <li class="breadcrumb-item active">@Localizer["MyWishlist"]</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>

    @if (stats != null)
    {
        <!-- İstatistik Kartları -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card text-center border-primary">
                    <div class="card-body">
                        <h5 class="card-title text-primary">@stats.TotalItems</h5>
                        <p class="card-text">@Localizer["TotalBooks"]</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card text-center border-success">
                    <div class="card-body">
                        <h5 class="card-title text-success">@stats.BooksWithPriceDrop</h5>
                        <p class="card-text">@Localizer["PriceDrops"]</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card text-center border-warning">
                    <div class="card-body">
                        <h5 class="card-title text-warning">₺@stats.TotalSavings.ToString("N2")</h5>
                        <p class="card-text">@Localizer["TotalSavings"]</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card text-center border-info">
                    <div class="card-body">
                        <h5 class="card-title text-info">
                            @(stats.LastAddedDate?.ToString("dd.MM.yyyy") ?? Localizer["None"].Value)
                        </h5>
                        <p class="card-text">@Localizer["LastAdded"]</p>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row">
        @if (Model.Any())
        {
            @foreach (var item in Model)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100 shadow-sm @(item.HasPriceDropped ? "border-success" : "")">
                        @if (item.HasPriceDropped)
                        {
                            <div class="position-absolute pos-top-right">
                                <span class="badge bg-success">
                                    <i class="bi bi-arrow-down"></i> @Localizer["Price Drop!"]
                                </span>
                            </div>
                        }
                        
                        <div class="card-img-top-container cover-300" style="overflow: hidden;">
                            <img src="@item.Book?.CoverImageUrl" 
                                 alt="@item.Book?.Title" 
                                 class="card-img-top img-fluid" 
                                 class="cover-img" />
                        </div>
                        
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@item.Book?.Title</h5>
                            <p class="card-text text-muted">@item.Book?.Author</p>
                            
                            <div class="price-section mb-2">
                                <div class="d-flex align-items-center">
                                    <span class="h5 text-primary mb-0">₺@item.Book?.Price.ToString("N2")</span>
                                    @if (item.HasPriceDropped && item.OriginalPrice.HasValue)
                                    {
                                        <span class="text-muted text-decoration-line-through ms-2">
                                            ₺@item.OriginalPrice.Value.ToString("N2")
                                        </span>
                                        <span class="badge bg-success ms-2">
                                            -₺@item.PriceDifference?.ToString("N2")
                                        </span>
                                    }
                                </div>
                            </div>

                            <div class="mb-2">
                                <small class="text-muted">
                                    <i class="bi bi-calendar"></i> @Localizer["Added:"] @item.AddedDate.ToString("dd.MM.yyyy")
                                </small>
                            </div>

                            <div class="form-check mb-3">
                                <input class="form-check-input notification-toggle" 
                                       type="checkbox" 
                                       @(item.IsNotificationEnabled ? "checked" : "")
                                       data-book-id="@item.BookId"
                                       id="notification-@item.BookId">
                                <label class="form-check-label" for="notification-@item.BookId">
                                    @Localizer["Price drop notification"]
                                </label>
                            </div>

                            <div class="mt-auto">
                                <div class="btn-group w-100" role="group">
                                    <a href="@Url.Action("Details", "Home", new { id = item.BookId })" 
                                       class="btn btn-outline-primary">
                                        <i class="bi bi-eye"></i> @Localizer["Details"]
                                    </a>
                                    <button type="button" 
                                            class="btn btn-outline-danger remove-from-wishlist"
                                            data-book-id="@item.BookId">
                                        <i class="bi bi-trash"></i> @Localizer["Remove"]
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="text-center py-5">
                    <i class="bi bi-heart display-1 text-muted"></i>
                    <h3 class="mt-3">@Localizer["Your wishlist is empty"]</h3>
                    <p class="text-muted">@Localizer["You can easily find the books you like later by adding them to your wishlist."]</p>
                    <a asp-controller="Home" asp-action="Index" class="btn btn-primary">
                        <i class="bi bi-search"></i> @Localizer["DiscoverBooks"]
                    </a>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Bildirim ayarlarını güncelle
            $('.notification-toggle').change(function() {
                var bookId = $(this).data('book-id');
                var enabled = $(this).is(':checked');
                
                $.post('@Url.Action("UpdateNotification", "Wishlist")', {
                    bookId: bookId,
                    enableNotification: enabled
                })
                .done(function(response) {
                    if (response.success) {
                        var message = enabled ? 
                            '@Localizer["Price drop notifications have been enabled"]' : 
                            '@Localizer["Price drop notifications have been disabled"]';
                        showNotification(message, 'success');
                    } else {
                        showNotification('@Localizer["An error occurred"]', 'error');
                    }
                })
                .fail(function() {
                    showNotification('@Localizer["An error occurred"]', 'error');
                });
            });

            // İstek listesinden kaldır
            $('.remove-from-wishlist').click(function() {
                var bookId = $(this).data('book-id');
                var card = $(this).closest('.col-md-6, .col-lg-4');
                
                if (confirm('@Localizer["Are you sure you want to remove this book from your wishlist?"]')) {
                    $.post('@Url.Action("RemoveFromWishlist", "Wishlist")', {
                        bookId: bookId
                    })
                    .done(function(response) {
                        card.fadeOut(300, function() {
                            $(this).remove();
                            // Sayfa boşsa reload et
                            if ($('.card:visible').length === 0) {
                                location.reload();
                            }
                        });
                        showNotification('@Localizer["The book has been removed from your wishlist"]', 'success');
                    })
                    .fail(function() {
                        showNotification('@Localizer["An error occurred"]', 'error');
                    });
                }
            });
        });

        function showNotification(message, type) {
            // Basit bir notification sistemi
            var alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
            var notification = `
                <div class="alert ${alertClass} alert-dismissible fade show position-fixed" 
                     class="alert-floating" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
            $('body').append(notification);
            setTimeout(function() {
                $('.alert').fadeOut();
            }, 3000);
        }
    </script>
}

<style>
    .card-img-top-container img {
        transition: transform 0.3s ease;
    }
    
    .card:hover .card-img-top-container img {
        transform: scale(1.05);
    }
    
    .border-success {
        border-width: 2px !important;
    }
</style>